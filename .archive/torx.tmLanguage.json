{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Torx",
	"scopeName": "text.html.torx",
	"injections": {
		"text.html.torx - comment.block.torx": {
			"patterns": [
				{
					"include": "#code-block"
				},
				{
					"include": "#end-bracket"
				},
				{
					"include": "#escape-entity"
				},
				{
					"include": "#statement"
				},
				{
					"include": "#function"
				},
				{
					"include": "#include"
				},
				{
					"include": "#else"
				},
				{
					"include": "#else-if"
				},
				{
					"include": "#explicit-expression"
				},
				{
					"include": "#implicit-expression"
				},
				{
					"include": "#comment"
				}
			]
		}
	},
	"patterns": [
		{
			"include": "text.html.basic"
		}
	],
	"repository": {
		"comment": {
			"begin": "\\@\\*",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.torx"
				}
			},
			"end": "\\*\\@",
			"name": "comment.block.torx"
		},
		"code-block": {
			"begin": "\\@\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [
				{
					"include": "source.js"
				}
			],
			"end": "\\}"
		},
		"escape-entity": {
			"match": "\\@\\@",
			"name": "keyword.control.torx"
		},
		"explicit-expression": {
			"name": "meta.expression.explicit.torx",
			"begin": "(\\@)\\(",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [
				{
					"include": "source.js"
				}
			],
			"end": "\\)"
		},
		"implicit-expression": {
			"name": "meta.expression.implicit.torx",
			"match": "(?<!\\@)(\\@)((\\w+)((?=\\.\\w)\\.\\w+)*((?=\\(.*\\))\\(.*\\))?((?=\\[.*\\]).*\\])?)",
			"captures": {
				"0": {
					"name": "variable.expression.torx"
				},
				"1": {
					"name": "keyword.control.torx"
				},
				"2": {
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			}
		},
		"statement": {
			"begin": "\\@(for|if|while|switch)\\s*\\((.*)\\)\\s*\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				},
				"2": {
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			},
			"patterns": [
				{
					"include": "source.js"
				}
			],
			"end": "\\}"
		},
		"function": {
			"begin": "\\@function\\s(\\w+)\\s?\\((.*)\\)\\s*\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				},
				"1": {
					"name": "meta.definition.function.torx"
				},
				"2": {
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			},
			"end": "\\}",
			"patterns": [
				{
					"include": "text.html.torx"
				}
			]
		},
		"else-if": {
			"begin": "(else\\sif)\\s?\\((.*)\\)\\s*\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				},
				"2": {
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			},
			"patterns": [
				{
					"include": "source.js"
				}
			],
			"end": "\\}"
		},
		"else": {
			"begin": "else\\s*\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [
				{
					"include": "source.js"
				}
			],
			"end": "\\}"
		}
	}
}